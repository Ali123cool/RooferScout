name: Deploy to Production

on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Generate Version Number
      id: version
      run: echo "VERSION=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

    - name: Update Version in HTML and JS
      run: |
        VERSION=${{ env.VERSION }}
        # Update the version in the HTML file
        sed -i "s|StartHereForm.js?v=[0-9]*|StartHereForm.js?v=$VERSION|g" ./Webflow-CustomCode/StartHereForm_WebflowCustomCode

        # Append the version number as a comment in the JS file
        echo "\n// Version: $VERSION" >> ./Webflow-CustomCode/StartHereForm.js

    - name: Upload new files to Production folder on BunnyCDN using HTTP API
      run: |
        for file in $(find ./Webflow-CustomCode/ -type f); do
          filename=$(basename "$file")
          echo "Uploading $filename to BunnyCDN with Cache-Control header"
          curl -X PUT \
            --url "https://la.storage.bunnycdn.com/rooferscout-storagezone/Production/$filename" \
            --header "AccessKey: ${{ secrets.BUNNY_API_KEY_STORAGE }}" \
            --header "Cache-Control: no-cache, no-store, must-revalidate" \
            --header "Content-Type: application/octet-stream" \
            --upload-file "$file" || exit 1;
        done

    - name: Purge BunnyCDN Cache for Updated Files
      run: |
        for file in $(find ./Webflow-CustomCode/ -type f); do
          filename=$(basename "$file")
          PURGE_URL="https://api.bunny.net/purge?url=https%3A%2F%2FRooferScout-PullZone.b-cdn.net%2FProduction%2F$filename&async=false"
          echo "Purging cache for $filename"
          RESPONSE=$(curl -v --request POST \
            --url "$PURGE_URL" \
            --header "AccessKey: ${{ secrets.BUNNY_API_KEY }}")
          echo "Purge response: $RESPONSE"
        done
